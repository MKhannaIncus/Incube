// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240514151124_AddRepaymentFieldsToTransaction")]
    partial class AddRepaymentFieldsToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idusers");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob")
                        .HasColumnName("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Deal", b =>
                {
                    b.Property<string>("Alias")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BorrowerOne")
                        .HasColumnType("longtext")
                        .HasColumnName("Borrower_one");

                    b.Property<string>("BorrowerTwo")
                        .HasColumnType("longtext")
                        .HasColumnName("Borrower_two");

                    b.Property<string>("DealPerformance")
                        .HasColumnType("longtext")
                        .HasColumnName("Deal_Performance");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("Fund")
                        .HasColumnType("longtext")
                        .HasColumnName("Fund");

                    b.Property<string>("Guarantee")
                        .HasColumnType("longtext")
                        .HasColumnName("Guarantee_1");

                    b.Property<int>("InvestorCode")
                        .HasColumnType("int")
                        .HasColumnName("Related_investment_code");

                    b.Property<string>("NAVType")
                        .HasColumnType("longtext")
                        .HasColumnName("NAV_type");

                    b.Property<string>("NationalAmount")
                        .HasColumnType("longtext")
                        .HasColumnName("National_amount");

                    b.Property<string>("OwnershipOne")
                        .HasColumnType("longtext")
                        .HasColumnName("Ownership_one");

                    b.Property<string>("PercentOwnershipOne")
                        .HasColumnType("longtext")
                        .HasColumnName("Percent_ownership_one");

                    b.Property<string>("Sector")
                        .HasColumnType("longtext")
                        .HasColumnName("Sector");

                    b.Property<DateTime>("SigningDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Signing_date");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.Property<string>("Strategy")
                        .HasColumnType("longtext")
                        .HasColumnName("Strategy");

                    b.Property<string>("SubSector")
                        .HasColumnType("longtext")
                        .HasColumnName("Sub_sector");

                    b.Property<string>("TypeInvestment")
                        .HasColumnType("longtext")
                        .HasColumnName("Type_Investment");

                    b.Property<string>("TypeInvestor")
                        .HasColumnType("longtext")
                        .HasColumnName("Type_Investor");

                    b.HasKey("Alias");

                    b.ToTable("deal");
                });

            modelBuilder.Entity("API.Entities.Transaction", b =>
                {
                    b.Property<int>("Transaction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount_Due_BOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Amount_Due_EOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Capitalized")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Cash_Interest_BOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Cash_Interest_EOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Occurred")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PIK_Interest_BOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PIK_Interest_EOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Principal_BOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Principal_EOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Related_Deal_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Repayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Repayment_CashInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Repayment_PIKInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Repayment_Principal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Repayment_UndrawnFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Transaction_Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("Undrawn_Interest_BOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Undrawn_Interest_EOP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Transaction_Id");

                    b.ToTable("transactions", "incus_capital");
                });
#pragma warning restore 612, 618
        }
    }
}
